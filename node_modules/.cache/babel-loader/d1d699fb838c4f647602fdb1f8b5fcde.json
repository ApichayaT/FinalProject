{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { foodMenu } from \"./data/food\";\nimport { getFirestore, collection, doc, setDoc, updateDoc, getDoc, getDocs, arrayUnion, query, where, Timestamp, addDoc, arrayRemove } from \"firebase/firestore\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDY5icUE_IVtL9xZ5qKomzXdv58x3qKWYM\",\n  authDomain: \"calories-52613.firebaseapp.com\",\n  projectId: \"calories-52613\",\n  storageBucket: \"calories-52613.appspot.com\",\n  messagingSenderId: \"749082785706\",\n  appId: \"1:749082785706:web:dd2271eb4c1c049e811dd3\",\n  measurementId: \"G-WVS1ZM3JEN\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\nexport const setData = async () => {\n  food.forEach((message, index, array) => {\n    const indexNum = index + 1;\n    console.log(indexNum); // console.log(typeof indexNum.toString());\n\n    console.log(message);\n    setDoc(doc(db, \"nutrition\", indexNum.toString()), message);\n    console.log(`saet is succect ${indexNum} => )}`, message);\n  });\n  console.log(\"food\", food);\n};\nexport const getFoodDB = async () => {\n  console.log(\"getFoodData\");\n  const allData = [];\n  const nutritionData = collection(db, \"nutrition\");\n  const querySnapshot = await getDocs(nutritionData);\n  querySnapshot.forEach(doc => {\n    const FoodData = doc.data();\n    allData.push(FoodData);\n  }); // console.log(\" => \", allData);\n\n  return allData;\n};","map":{"version":3,"sources":["C:/Users/Kanchana Supakdee/Desktop/FinalProject99/src/util/data/handleFirebaseCalApp.js"],"names":["initializeApp","getAnalytics","foodMenu","getFirestore","collection","doc","setDoc","updateDoc","getDoc","getDocs","arrayUnion","query","where","Timestamp","addDoc","arrayRemove","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","db","setData","food","forEach","message","index","array","indexNum","console","log","toString","getFoodDB","allData","nutritionData","querySnapshot","FoodData","data","push"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SACEC,YADF,EAEEC,UAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,OAPF,EAQEC,UARF,EASEC,KATF,EAUEC,KAVF,EAWEC,SAXF,EAYEC,MAZF,EAaEC,WAbF,QAcO,oBAdP,C,CAgBA;AACA;AAEA;AACA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,gCAFS;AAGrBC,EAAAA,SAAS,EAAE,gBAHU;AAIrBC,EAAAA,aAAa,EAAE,4BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB,C,CAUA;;AACA,MAAMC,GAAG,GAAGxB,aAAa,CAACgB,cAAD,CAAzB;AACA,MAAMS,SAAS,GAAGxB,YAAY,CAACuB,GAAD,CAA9B;AACA,MAAME,EAAE,GAAGvB,YAAY,CAACqB,GAAD,CAAvB;AAEA,OAAO,MAAMG,OAAO,GAAG,YAAY;AACjCC,EAAAA,IAAI,CAACC,OAAL,CAAa,CAACC,OAAD,EAAUC,KAAV,EAAiBC,KAAjB,KAA2B;AACtC,UAAMC,QAAQ,GAAGF,KAAK,GAAG,CAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFsC,CAItC;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAxB,IAAAA,MAAM,CAACD,GAAG,CAACqB,EAAD,EAAK,WAAL,EAAkBO,QAAQ,CAACG,QAAT,EAAlB,CAAJ,EAA4CN,OAA5C,CAAN;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBF,QAAS,QAAxC,EAAiDH,OAAjD;AACD,GARD;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;AACD,CAXM;AAaP,OAAO,MAAMS,SAAS,GAAG,YAAY;AACnCH,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,QAAMG,OAAO,GAAG,EAAhB;AACA,QAAMC,aAAa,GAAGnC,UAAU,CAACsB,EAAD,EAAK,WAAL,CAAhC;AACA,QAAMc,aAAa,GAAG,MAAM/B,OAAO,CAAC8B,aAAD,CAAnC;AAEAC,EAAAA,aAAa,CAACX,OAAd,CAAuBxB,GAAD,IAAS;AAC7B,UAAMoC,QAAQ,GAAGpC,GAAG,CAACqC,IAAJ,EAAjB;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAaF,QAAb;AACD,GAHD,EANmC,CAUnC;;AACA,SAAOH,OAAP;AACD,CAZM","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { foodMenu } from \"./data/food\";\nimport {\n  getFirestore,\n  collection,\n  doc,\n  setDoc,\n  updateDoc,\n  getDoc,\n  getDocs,\n  arrayUnion,\n  query,\n  where,\n  Timestamp,\n  addDoc,\n  arrayRemove,\n} from \"firebase/firestore\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDY5icUE_IVtL9xZ5qKomzXdv58x3qKWYM\",\n  authDomain: \"calories-52613.firebaseapp.com\",\n  projectId: \"calories-52613\",\n  storageBucket: \"calories-52613.appspot.com\",\n  messagingSenderId: \"749082785706\",\n  appId: \"1:749082785706:web:dd2271eb4c1c049e811dd3\",\n  measurementId: \"G-WVS1ZM3JEN\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\n\nexport const setData = async () => {\n  food.forEach((message, index, array) => {\n    const indexNum = index + 1;\n    console.log(indexNum);\n\n    // console.log(typeof indexNum.toString());\n    console.log(message);\n    setDoc(doc(db, \"nutrition\", indexNum.toString()), message);\n    console.log(`saet is succect ${indexNum} => )}`, message);\n  });\n  console.log(\"food\", food);\n};\n\nexport const getFoodDB = async () => {\n  console.log(\"getFoodData\");\n  const allData = [];\n  const nutritionData = collection(db, \"nutrition\");\n  const querySnapshot = await getDocs(nutritionData);\n\n  querySnapshot.forEach((doc) => {\n    const FoodData = doc.data();\n    allData.push(FoodData);\n  });\n  // console.log(\" => \", allData);\n  return allData;\n};\n"]},"metadata":{},"sourceType":"module"}